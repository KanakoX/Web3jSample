{
  "contractName": "MyToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620015e8380380620015e88339818101604052810190620000379190620002e7565b828282826003908051906020019062000052929190620001a2565b5081600490805190602001906200006b929190620001a2565b5080600560006101000a81548160ff021916908360ff160217905550505050620000bb338260ff16600a620000a19190620004c6565b6064620000af919062000603565b620000c460201b60201c565b505050620007f6565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200011591906200040e565b92505081905550806000808282546200012f91906200040e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000196919062000392565b60405180910390a35050565b828054620001b090620006b1565b90600052602060002090601f016020900481019282620001d4576000855562000220565b82601f10620001ef57805160ff191683800117855562000220565b8280016001018555821562000220579182015b828111156200021f57825182559160200191906001019062000202565b5b5090506200022f919062000233565b5090565b5b808211156200024e57600081600090555060010162000234565b5090565b6000620002696200026384620003d8565b620003af565b905082815260208101848484011115620002885762000287620007af565b5b620002958482856200067b565b509392505050565b600082601f830112620002b557620002b4620007aa565b5b8151620002c784826020860162000252565b91505092915050565b600081519050620002e181620007dc565b92915050565b600080600060608486031215620003035762000302620007b9565b5b600084015167ffffffffffffffff811115620003245762000323620007b4565b5b62000332868287016200029d565b935050602084015167ffffffffffffffff811115620003565762000355620007b4565b5b62000364868287016200029d565b92505060406200037786828701620002d0565b9150509250925092565b6200038c8162000664565b82525050565b6000602082019050620003a9600083018462000381565b92915050565b6000620003bb620003ce565b9050620003c98282620006e7565b919050565b6000604051905090565b600067ffffffffffffffff821115620003f657620003f56200077b565b5b6200040182620007be565b9050602081019050919050565b60006200041b8262000664565b9150620004288362000664565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000460576200045f6200071d565b5b828201905092915050565b6000808291508390505b6001851115620004bd578086048111156200049557620004946200071d565b5b6001851615620004a55780820291505b8081029050620004b585620007cf565b945062000475565b94509492505050565b6000620004d38262000664565b9150620004e08362000664565b92506200050f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000517565b905092915050565b600082620005295760019050620005fc565b81620005395760009050620005fc565b81600181146200055257600281146200055d5762000593565b6001915050620005fc565b60ff8411156200057257620005716200071d565b5b8360020a9150848211156200058c576200058b6200071d565b5b50620005fc565b5060208310610133831016604e8410600b8410161715620005cd5782820a905083811115620005c757620005c66200071d565b5b620005fc565b620005dc84848460016200046b565b92509050818404811115620005f657620005f56200071d565b5b81810290505b9392505050565b6000620006108262000664565b91506200061d8362000664565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200065957620006586200071d565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b60005b838110156200069b5780820151818401526020810190506200067e565b83811115620006ab576000848401525b50505050565b60006002820490506001821680620006ca57607f821691505b60208210811415620006e157620006e06200074c565b5b50919050565b620006f282620007be565b810181811067ffffffffffffffff821117156200071457620007136200077b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b620007e7816200066e565b8114620007f357600080fd5b50565b610de280620008066000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461018f57806395d89b41146101bf5780639dc29fac146101dd578063a9059cbb146101f9578063dd62ed3e14610229578063f8a8fd6d14610259576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c1610277565b6040516100ce9190610b52565b60405180910390f35b6100f160048036038101906100ec9190610a67565b610305565b6040516100fe9190610b37565b60405180910390f35b61010f6103f7565b60405161011c9190610b74565b60405180910390f35b61013f600480360381019061013a9190610a14565b6103fd565b60405161014c9190610b37565b60405180910390f35b61015d6105ae565b60405161016a9190610b8f565b60405180910390f35b61018d60048036038101906101889190610a67565b6105c1565b005b6101a960048036038101906101a491906109a7565b6105cf565b6040516101b69190610b74565b60405180910390f35b6101c76105e7565b6040516101d49190610b52565b60405180910390f35b6101f760048036038101906101f29190610a67565b610675565b005b610213600480360381019061020e9190610a67565b610683565b6040516102209190610b37565b60405180910390f35b610243600480360381019061023e91906109d4565b6107a0565b6040516102509190610b74565b60405180910390f35b6102616107c5565b60405161026e9190610b1c565b60405180910390f35b6003805461028490610cd8565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090610cd8565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103e59190610b74565b60405180910390a36001905092915050565b60005481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461048b9190610c1c565b9250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104e19190610c1c565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105379190610bc6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161059b9190610b74565b60405180910390a3600190509392505050565b600560009054906101000a900460ff1681565b6105cb82826107cd565b5050565b60016020528060005260406000206000915090505481565b600480546105f490610cd8565b80601f016020809104026020016040519081016040528092919081815260200182805461062090610cd8565b801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b505050505081565b61067f82826108a5565b5050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d49190610c1c565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461072a9190610bc6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078e9190610b74565b60405180910390a36001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b600033905090565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081c9190610bc6565b92505081905550806000808282546108349190610bc6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108999190610b74565b60405180910390a35050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108f49190610c1c565b925050819055508060008082825461090c9190610c1c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109719190610b74565b60405180910390a35050565b60008135905061098c81610d7e565b92915050565b6000813590506109a181610d95565b92915050565b6000602082840312156109bd576109bc610d68565b5b60006109cb8482850161097d565b91505092915050565b600080604083850312156109eb576109ea610d68565b5b60006109f98582860161097d565b9250506020610a0a8582860161097d565b9150509250929050565b600080600060608486031215610a2d57610a2c610d68565b5b6000610a3b8682870161097d565b9350506020610a4c8682870161097d565b9250506040610a5d86828701610992565b9150509250925092565b60008060408385031215610a7e57610a7d610d68565b5b6000610a8c8582860161097d565b9250506020610a9d85828601610992565b9150509250929050565b610ab081610c50565b82525050565b610abf81610c62565b82525050565b6000610ad082610baa565b610ada8185610bb5565b9350610aea818560208601610ca5565b610af381610d6d565b840191505092915050565b610b0781610c8e565b82525050565b610b1681610c98565b82525050565b6000602082019050610b316000830184610aa7565b92915050565b6000602082019050610b4c6000830184610ab6565b92915050565b60006020820190508181036000830152610b6c8184610ac5565b905092915050565b6000602082019050610b896000830184610afe565b92915050565b6000602082019050610ba46000830184610b0d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610bd182610c8e565b9150610bdc83610c8e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c1157610c10610d0a565b5b828201905092915050565b6000610c2782610c8e565b9150610c3283610c8e565b925082821015610c4557610c44610d0a565b5b828203905092915050565b6000610c5b82610c6e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610cc3578082015181840152602081019050610ca8565b83811115610cd2576000848401525b50505050565b60006002820490506001821680610cf057607f821691505b60208210811415610d0457610d03610d39565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610d8781610c50565b8114610d9257600080fd5b50565b610d9e81610c8e565b8114610da957600080fd5b5056fea264697066735822122002676ffd281ad90d1b3d4f7fc349505a036e1bfd0cddba9af5ae97344f761c4564736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461018f57806395d89b41146101bf5780639dc29fac146101dd578063a9059cbb146101f9578063dd62ed3e14610229578063f8a8fd6d14610259576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c1610277565b6040516100ce9190610b52565b60405180910390f35b6100f160048036038101906100ec9190610a67565b610305565b6040516100fe9190610b37565b60405180910390f35b61010f6103f7565b60405161011c9190610b74565b60405180910390f35b61013f600480360381019061013a9190610a14565b6103fd565b60405161014c9190610b37565b60405180910390f35b61015d6105ae565b60405161016a9190610b8f565b60405180910390f35b61018d60048036038101906101889190610a67565b6105c1565b005b6101a960048036038101906101a491906109a7565b6105cf565b6040516101b69190610b74565b60405180910390f35b6101c76105e7565b6040516101d49190610b52565b60405180910390f35b6101f760048036038101906101f29190610a67565b610675565b005b610213600480360381019061020e9190610a67565b610683565b6040516102209190610b37565b60405180910390f35b610243600480360381019061023e91906109d4565b6107a0565b6040516102509190610b74565b60405180910390f35b6102616107c5565b60405161026e9190610b1c565b60405180910390f35b6003805461028490610cd8565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090610cd8565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103e59190610b74565b60405180910390a36001905092915050565b60005481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461048b9190610c1c565b9250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104e19190610c1c565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105379190610bc6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161059b9190610b74565b60405180910390a3600190509392505050565b600560009054906101000a900460ff1681565b6105cb82826107cd565b5050565b60016020528060005260406000206000915090505481565b600480546105f490610cd8565b80601f016020809104026020016040519081016040528092919081815260200182805461062090610cd8565b801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b505050505081565b61067f82826108a5565b5050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d49190610c1c565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461072a9190610bc6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078e9190610b74565b60405180910390a36001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b600033905090565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081c9190610bc6565b92505081905550806000808282546108349190610bc6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108999190610b74565b60405180910390a35050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108f49190610c1c565b925050819055508060008082825461090c9190610c1c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109719190610b74565b60405180910390a35050565b60008135905061098c81610d7e565b92915050565b6000813590506109a181610d95565b92915050565b6000602082840312156109bd576109bc610d68565b5b60006109cb8482850161097d565b91505092915050565b600080604083850312156109eb576109ea610d68565b5b60006109f98582860161097d565b9250506020610a0a8582860161097d565b9150509250929050565b600080600060608486031215610a2d57610a2c610d68565b5b6000610a3b8682870161097d565b9350506020610a4c8682870161097d565b9250506040610a5d86828701610992565b9150509250925092565b60008060408385031215610a7e57610a7d610d68565b5b6000610a8c8582860161097d565b9250506020610a9d85828601610992565b9150509250929050565b610ab081610c50565b82525050565b610abf81610c62565b82525050565b6000610ad082610baa565b610ada8185610bb5565b9350610aea818560208601610ca5565b610af381610d6d565b840191505092915050565b610b0781610c8e565b82525050565b610b1681610c98565b82525050565b6000602082019050610b316000830184610aa7565b92915050565b6000602082019050610b4c6000830184610ab6565b92915050565b60006020820190508181036000830152610b6c8184610ac5565b905092915050565b6000602082019050610b896000830184610afe565b92915050565b6000602082019050610ba46000830184610b0d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610bd182610c8e565b9150610bdc83610c8e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c1157610c10610d0a565b5b828201905092915050565b6000610c2782610c8e565b9150610c3283610c8e565b925082821015610c4557610c44610d0a565b5b828203905092915050565b6000610c5b82610c6e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610cc3578082015181840152602081019050610ca8565b83811115610cd2576000848401525b50505050565b60006002820490506001821680610cf057607f821691505b60208210811415610d0457610d03610d39565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610d8781610c50565b8114610d9257600080fd5b50565b610d9e81610c8e565b8114610da957600080fd5b5056fea264697066735822122002676ffd281ad90d1b3d4f7fc349505a036e1bfd0cddba9af5ae97344f761c4564736f6c63430008060033",
  "sourceMap": "83:203:3:-:0;;;116:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;192:4;198:6;206:8;473:5:0;466:4;:12;;;;;;;;;;;;:::i;:::-;;498:7;489:6;:16;;;;;;;;;;;;:::i;:::-;;527:9;516:8;;:20;;;;;;;;;;;;;;;;;;382:162;;;227:48:3::1;233:10;265:8;257:17;;251:2;:23;;;;:::i;:::-;245:3;:29;;;;:::i;:::-;227:5;;;:48;;:::i;:::-;116:167:::0;;;83:203;;1532:174:0;1612:6;1595:9;:13;1605:2;1595:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1644:6;1629:11;;:21;;;;;;;:::i;:::-;;;;;;;;1687:2;1666:32;;1683:1;1666:32;;;1691:6;1666:32;;;;;;:::i;:::-;;;;;;;;1532:174;;:::o;83:203:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:4:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:2;;572:79;;:::i;:::-;531:2;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;;;;;:::o;809:139::-;864:5;895:6;889:13;880:22;;911:31;936:5;911:31;:::i;:::-;870:78;;;;:::o;954:1005::-;1060:6;1068;1076;1125:2;1113:9;1104:7;1100:23;1096:32;1093:2;;;1131:79;;:::i;:::-;1093:2;1272:1;1261:9;1257:17;1251:24;1302:18;1294:6;1291:30;1288:2;;;1324:79;;:::i;:::-;1288:2;1429:74;1495:7;1486:6;1475:9;1471:22;1429:74;:::i;:::-;1419:84;;1222:291;1573:2;1562:9;1558:18;1552:25;1604:18;1596:6;1593:30;1590:2;;;1626:79;;:::i;:::-;1590:2;1731:74;1797:7;1788:6;1777:9;1773:22;1731:74;:::i;:::-;1721:84;;1523:292;1854:2;1880:62;1934:7;1925:6;1914:9;1910:22;1880:62;:::i;:::-;1870:72;;1825:127;1083:876;;;;;:::o;1965:118::-;2052:24;2070:5;2052:24;:::i;:::-;2047:3;2040:37;2030:53;;:::o;2089:222::-;2182:4;2220:2;2209:9;2205:18;2197:26;;2233:71;2301:1;2290:9;2286:17;2277:6;2233:71;:::i;:::-;2187:124;;;;:::o;2317:129::-;2351:6;2378:20;;:::i;:::-;2368:30;;2407:33;2435:4;2427:6;2407:33;:::i;:::-;2358:88;;;:::o;2452:75::-;2485:6;2518:2;2512:9;2502:19;;2492:35;:::o;2533:308::-;2595:4;2685:18;2677:6;2674:30;2671:2;;;2707:18;;:::i;:::-;2671:2;2745:29;2767:6;2745:29;:::i;:::-;2737:37;;2829:4;2823;2819:15;2811:23;;2600:241;;;:::o;2847:305::-;2887:3;2906:20;2924:1;2906:20;:::i;:::-;2901:25;;2940:20;2958:1;2940:20;:::i;:::-;2935:25;;3094:1;3026:66;3022:74;3019:1;3016:81;3013:2;;;3100:18;;:::i;:::-;3013:2;3144:1;3141;3137:9;3130:16;;2891:261;;;;:::o;3158:848::-;3219:5;3226:4;3250:6;3241:15;;3274:5;3265:14;;3288:712;3309:1;3299:8;3296:15;3288:712;;;3404:4;3399:3;3395:14;3389:4;3386:24;3383:2;;;3413:18;;:::i;:::-;3383:2;3463:1;3453:8;3449:16;3446:2;;;3878:4;3871:5;3867:16;3858:25;;3446:2;3928:4;3922;3918:15;3910:23;;3958:32;3981:8;3958:32;:::i;:::-;3946:44;;3288:712;;;3231:775;;;;;;;:::o;4012:285::-;4072:5;4096:23;4114:4;4096:23;:::i;:::-;4088:31;;4140:27;4158:8;4140:27;:::i;:::-;4128:39;;4186:104;4223:66;4213:8;4207:4;4186:104;:::i;:::-;4177:113;;4078:219;;;;:::o;4303:1073::-;4357:5;4548:8;4538:2;;4569:1;4560:10;;4571:5;;4538:2;4597:4;4587:2;;4614:1;4605:10;;4616:5;;4587:2;4683:4;4731:1;4726:27;;;;4767:1;4762:191;;;;4676:277;;4726:27;4744:1;4735:10;;4746:5;;;4762:191;4807:3;4797:8;4794:17;4791:2;;;4814:18;;:::i;:::-;4791:2;4863:8;4860:1;4856:16;4847:25;;4898:3;4891:5;4888:14;4885:2;;;4905:18;;:::i;:::-;4885:2;4938:5;;;4676:277;;5062:2;5052:8;5049:16;5043:3;5037:4;5034:13;5030:36;5012:2;5002:8;4999:16;4994:2;4988:4;4985:12;4981:35;4965:111;4962:2;;;5118:8;5112:4;5108:19;5099:28;;5153:3;5146:5;5143:14;5140:2;;;5160:18;;:::i;:::-;5140:2;5193:5;;4962:2;5233:42;5271:3;5261:8;5255:4;5252:1;5233:42;:::i;:::-;5218:57;;;;5307:4;5302:3;5298:14;5291:5;5288:25;5285:2;;;5316:18;;:::i;:::-;5285:2;5365:4;5358:5;5354:16;5345:25;;4363:1013;;;;;;:::o;5382:348::-;5422:7;5445:20;5463:1;5445:20;:::i;:::-;5440:25;;5479:20;5497:1;5479:20;:::i;:::-;5474:25;;5667:1;5599:66;5595:74;5592:1;5589:81;5584:1;5577:9;5570:17;5566:105;5563:2;;;5674:18;;:::i;:::-;5563:2;5722:1;5719;5715:9;5704:20;;5430:300;;;;:::o;5736:77::-;5773:7;5802:5;5791:16;;5781:32;;;:::o;5819:86::-;5854:7;5894:4;5887:5;5883:16;5872:27;;5862:43;;;:::o;5911:307::-;5979:1;5989:113;6003:6;6000:1;5997:13;5989:113;;;6088:1;6083:3;6079:11;6073:18;6069:1;6064:3;6060:11;6053:39;6025:2;6022:1;6018:10;6013:15;;5989:113;;;6120:6;6117:1;6114:13;6111:2;;;6200:1;6191:6;6186:3;6182:16;6175:27;6111:2;5960:258;;;;:::o;6224:320::-;6268:6;6305:1;6299:4;6295:12;6285:22;;6352:1;6346:4;6342:12;6373:18;6363:2;;6429:4;6421:6;6417:17;6407:27;;6363:2;6491;6483:6;6480:14;6460:18;6457:38;6454:2;;;6510:18;;:::i;:::-;6454:2;6275:269;;;;:::o;6550:281::-;6633:27;6655:4;6633:27;:::i;:::-;6625:6;6621:40;6763:6;6751:10;6748:22;6727:18;6715:10;6712:34;6709:62;6706:2;;;6774:18;;:::i;:::-;6706:2;6814:10;6810:2;6803:22;6593:238;;;:::o;6837:180::-;6885:77;6882:1;6875:88;6982:4;6979:1;6972:15;7006:4;7003:1;6996:15;7023:180;7071:77;7068:1;7061:88;7168:4;7165:1;7158:15;7192:4;7189:1;7182:15;7209:180;7257:77;7254:1;7247:88;7354:4;7351:1;7344:15;7378:4;7375:1;7368:15;7395:117;7504:1;7501;7494:12;7518:117;7627:1;7624;7617:12;7641:117;7750:1;7747;7740:12;7764:117;7873:1;7870;7863:12;7887:102;7928:6;7979:2;7975:7;7970:2;7963:5;7959:14;7955:28;7945:38;;7935:54;;;:::o;7995:102::-;8037:8;8084:5;8081:1;8077:13;8056:34;;8046:51;;;:::o;8103:118::-;8174:22;8190:5;8174:22;:::i;:::-;8167:5;8164:33;8154:2;;8211:1;8208;8201:12;8154:2;8144:77;:::o;83:203:3:-;;;;;;;",
  "deployedSourceMap": "83:203:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;300:18:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;116:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1193:316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;352:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1917:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;158:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2012:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;665:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;218:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;552:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;300:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;948:216::-;1025:4;1075:6;1042:9;:21;1052:10;1042:21;;;;;;;;;;;;;;;:30;1064:7;1042:30;;;;;;;;;;;;;;;:39;;;;1118:7;1097:37;;1106:10;1097:37;;;1127:6;1097:37;;;;;;:::i;:::-;;;;;;;;1152:4;1145:11;;948:216;;;;:::o;116:35::-;;;;:::o;1193:316::-;1293:4;1343:6;1310:9;:17;1320:6;1310:17;;;;;;;;;;;;;;;:29;1328:10;1310:29;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;1381:6;1360:9;:17;1370:6;1360:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;1422:6;1398:9;:20;1408:9;1398:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1461:9;1444:35;;1453:6;1444:35;;;1472:6;1444:35;;;;;;:::i;:::-;;;;;;;;1497:4;1490:11;;1193:316;;;;;:::o;352:21::-;;;;;;;;;;;;;:::o;1917:87::-;1979:17;1985:2;1989:6;1979:5;:17::i;:::-;1917:87;;:::o;158:53::-;;;;;;;;;;;;;;;;;:::o;325:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2012:91::-;2076:19;2082:4;2088:6;2076:5;:19::i;:::-;2012:91;;:::o;665:254::-;745:4;787:6;762:9;:21;772:10;762:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;828:6;804:9;:20;814:9;804:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;871:9;850:39;;859:10;850:39;;;882:6;850:39;;;;;;:::i;:::-;;;;;;;;907:4;900:11;;665:254;;;;:::o;218:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;552:84::-;591:7;618:10;611:17;;552:84;:::o;1532:174::-;1612:6;1595:9;:13;1605:2;1595:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1644:6;1629:11;;:21;;;;;;;:::i;:::-;;;;;;;;1687:2;1666:32;;1683:1;1666:32;;;1691:6;1666:32;;;;;;:::i;:::-;;;;;;;;1532:174;;:::o;1729:180::-;1813:6;1794:9;:15;1804:4;1794:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;1845:6;1830:11;;:21;;;;;;;:::i;:::-;;;;;;;;1890:1;1867:34;;1876:4;1867:34;;;1894:6;1867:34;;;;;;:::i;:::-;;;;;;;;1729:180;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;411:79;;:::i;:::-;373:2;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;363:263;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:2;;;763:79;;:::i;:::-;725:2;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;715:391;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:2;;;1260:79;;:::i;:::-;1222:2;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1212:519;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:2;;;1868:79;;:::i;:::-;1830:2;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1820:391;;;;;:::o;2217:118::-;2304:24;2322:5;2304:24;:::i;:::-;2299:3;2292:37;2282:53;;:::o;2341:109::-;2422:21;2437:5;2422:21;:::i;:::-;2417:3;2410:34;2400:50;;:::o;2456:364::-;2544:3;2572:39;2605:5;2572:39;:::i;:::-;2627:71;2691:6;2686:3;2627:71;:::i;:::-;2620:78;;2707:52;2752:6;2747:3;2740:4;2733:5;2729:16;2707:52;:::i;:::-;2784:29;2806:6;2784:29;:::i;:::-;2779:3;2775:39;2768:46;;2548:272;;;;;:::o;2826:118::-;2913:24;2931:5;2913:24;:::i;:::-;2908:3;2901:37;2891:53;;:::o;2950:112::-;3033:22;3049:5;3033:22;:::i;:::-;3028:3;3021:35;3011:51;;:::o;3068:222::-;3161:4;3199:2;3188:9;3184:18;3176:26;;3212:71;3280:1;3269:9;3265:17;3256:6;3212:71;:::i;:::-;3166:124;;;;:::o;3296:210::-;3383:4;3421:2;3410:9;3406:18;3398:26;;3434:65;3496:1;3485:9;3481:17;3472:6;3434:65;:::i;:::-;3388:118;;;;:::o;3512:313::-;3625:4;3663:2;3652:9;3648:18;3640:26;;3712:9;3706:4;3702:20;3698:1;3687:9;3683:17;3676:47;3740:78;3813:4;3804:6;3740:78;:::i;:::-;3732:86;;3630:195;;;;:::o;3831:222::-;3924:4;3962:2;3951:9;3947:18;3939:26;;3975:71;4043:1;4032:9;4028:17;4019:6;3975:71;:::i;:::-;3929:124;;;;:::o;4059:214::-;4148:4;4186:2;4175:9;4171:18;4163:26;;4199:67;4263:1;4252:9;4248:17;4239:6;4199:67;:::i;:::-;4153:120;;;;:::o;4360:99::-;4412:6;4446:5;4440:12;4430:22;;4419:40;;;:::o;4465:169::-;4549:11;4583:6;4578:3;4571:19;4623:4;4618:3;4614:14;4599:29;;4561:73;;;;:::o;4640:305::-;4680:3;4699:20;4717:1;4699:20;:::i;:::-;4694:25;;4733:20;4751:1;4733:20;:::i;:::-;4728:25;;4887:1;4819:66;4815:74;4812:1;4809:81;4806:2;;;4893:18;;:::i;:::-;4806:2;4937:1;4934;4930:9;4923:16;;4684:261;;;;:::o;4951:191::-;4991:4;5011:20;5029:1;5011:20;:::i;:::-;5006:25;;5045:20;5063:1;5045:20;:::i;:::-;5040:25;;5084:1;5081;5078:8;5075:2;;;5089:18;;:::i;:::-;5075:2;5134:1;5131;5127:9;5119:17;;4996:146;;;;:::o;5148:96::-;5185:7;5214:24;5232:5;5214:24;:::i;:::-;5203:35;;5193:51;;;:::o;5250:90::-;5284:7;5327:5;5320:13;5313:21;5302:32;;5292:48;;;:::o;5346:126::-;5383:7;5423:42;5416:5;5412:54;5401:65;;5391:81;;;:::o;5478:77::-;5515:7;5544:5;5533:16;;5523:32;;;:::o;5561:86::-;5596:7;5636:4;5629:5;5625:16;5614:27;;5604:43;;;:::o;5653:307::-;5721:1;5731:113;5745:6;5742:1;5739:13;5731:113;;;5830:1;5825:3;5821:11;5815:18;5811:1;5806:3;5802:11;5795:39;5767:2;5764:1;5760:10;5755:15;;5731:113;;;5862:6;5859:1;5856:13;5853:2;;;5942:1;5933:6;5928:3;5924:16;5917:27;5853:2;5702:258;;;;:::o;5966:320::-;6010:6;6047:1;6041:4;6037:12;6027:22;;6094:1;6088:4;6084:12;6115:18;6105:2;;6171:4;6163:6;6159:17;6149:27;;6105:2;6233;6225:6;6222:14;6202:18;6199:38;6196:2;;;6252:18;;:::i;:::-;6196:2;6017:269;;;;:::o;6292:180::-;6340:77;6337:1;6330:88;6437:4;6434:1;6427:15;6461:4;6458:1;6451:15;6478:180;6526:77;6523:1;6516:88;6623:4;6620:1;6613:15;6647:4;6644:1;6637:15;6787:117;6896:1;6893;6886:12;6910:102;6951:6;7002:2;6998:7;6993:2;6986:5;6982:14;6978:28;6968:38;;6958:54;;;:::o;7018:122::-;7091:24;7109:5;7091:24;:::i;:::-;7084:5;7081:35;7071:2;;7130:1;7127;7120:12;7071:2;7061:79;:::o;7146:122::-;7219:24;7237:5;7219:24;:::i;:::-;7212:5;7209:35;7199:2;;7258:1;7255;7248:12;7199:2;7189:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8;\r\n\r\nimport \"./ERC20.sol\";\r\n\r\ncontract MyToken is ERC20 {\r\n    constructor(string memory name, string memory symbol, uint8 decimals) ERC20(name, symbol, decimals) {\r\n        _mint(msg.sender, 100 * 10 ** uint256(decimals));\r\n    }\r\n}\r\n",
  "sourcePath": "F:/BlockChain/ERC20Token/contracts/MyToken.sol",
  "ast": {
    "absolutePath": "/F/BlockChain/ERC20Token/contracts/MyToken.sol",
    "exportedSymbols": {
      "ERC20": [
        241
      ],
      "IERC20": [
        310
      ],
      "MyToken": [
        377
      ]
    },
    "id": 378,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          "^",
          "0.8"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:21:3"
      },
      {
        "absolutePath": "/F/BlockChain/ERC20Token/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 346,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 378,
        "sourceUnit": 242,
        "src": "58:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 347,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 241,
              "src": "103:5:3"
            },
            "id": 348,
            "nodeType": "InheritanceSpecifier",
            "src": "103:5:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 377,
        "linearizedBaseContracts": [
          377,
          241,
          310
        ],
        "name": "MyToken",
        "nameLocation": "92:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "216:67:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "233:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "233:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "245:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "251:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 369,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 354,
                                "src": "265:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "257:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 367,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "257:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "257:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "251:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "245:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 362,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "227:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "227:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "227:48:3"
                }
              ]
            },
            "id": 376,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 357,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 350,
                    "src": "192:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 358,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 352,
                    "src": "198:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 359,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 354,
                    "src": "206:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 360,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 356,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 241,
                  "src": "186:5:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "186:29:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "142:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "128:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "128:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "162:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "148:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "148:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "176:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "170:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "127:58:3"
            },
            "returnParameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "216:0:3"
            },
            "scope": 377,
            "src": "116:167:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 378,
        "src": "83:203:3",
        "usedErrors": []
      }
    ],
    "src": "33:255:3"
  },
  "legacyAST": {
    "absolutePath": "/F/BlockChain/ERC20Token/contracts/MyToken.sol",
    "exportedSymbols": {
      "ERC20": [
        241
      ],
      "IERC20": [
        310
      ],
      "MyToken": [
        377
      ]
    },
    "id": 378,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          "^",
          "0.8"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:21:3"
      },
      {
        "absolutePath": "/F/BlockChain/ERC20Token/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 346,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 378,
        "sourceUnit": 242,
        "src": "58:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 347,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 241,
              "src": "103:5:3"
            },
            "id": 348,
            "nodeType": "InheritanceSpecifier",
            "src": "103:5:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 377,
        "linearizedBaseContracts": [
          377,
          241,
          310
        ],
        "name": "MyToken",
        "nameLocation": "92:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "216:67:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "233:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "233:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "245:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "251:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 369,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 354,
                                "src": "265:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "257:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 367,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "257:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "257:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "251:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "245:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 362,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "227:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "227:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "227:48:3"
                }
              ]
            },
            "id": 376,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 357,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 350,
                    "src": "192:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 358,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 352,
                    "src": "198:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 359,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 354,
                    "src": "206:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 360,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 356,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 241,
                  "src": "186:5:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "186:29:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "142:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "128:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "128:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "162:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "148:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "148:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "176:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "170:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "127:58:3"
            },
            "returnParameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "216:0:3"
            },
            "scope": 377,
            "src": "116:167:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 378,
        "src": "83:203:3",
        "usedErrors": []
      }
    ],
    "src": "33:255:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "41edc6eabb22684a5507192406441c2d25c7954f2e",
      "transactionHash": "181c51e9ed2bf7f974c98bdab63a20ac451b47ce0d25292e3fb0944748e8fc5a"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2025-08-18T11:21:46.841Z"
}